snap (Super Nintendo Assembling Program) is a multi-pass 65816 assembler.

Expression parsing isn't done yet. It may be, one day. As need basis.

Macros are not implemented. They may never be.

Syntax generally follows that laid out in the WDC 65816 docs and datasheets.

TODO:
-absolute modifiers
-more math/expression parsing
-a bunch more directives
-more features for the existing directives
-riddled with bugs I am sure

WHAT'S DONE:
-all instructions/addressing modes
-very very basic math/expression parsing
-multipass optimization

; comments look like this

LabelsLookLikeThis:
.localLabelsLookLikeThis:

DefinesLookLikeThis: equ $20

INCSRC "defines.asm"

ORG $8000 ; doesn't actually write any data, just changes the current PC

; the usual 65816 stuff
XCE
CLC
lda #$12
sta $2100
LdA #%10010100
STA $00
LONGA ON
LONGA OFF
LONGI ON
LONGI OFF ; these don't actually emit the necessary REP/SEP ops - they're for
          ; the assembler only

PAD $FFC0 ; writes 0s until PC = operand

ASCII "GAME TITLE"
PAD $FFD5
DB $20
PAD $FFFC
DW Start

